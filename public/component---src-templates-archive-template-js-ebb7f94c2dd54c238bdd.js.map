{"version":3,"sources":["webpack:///./src/components/pagination.js","webpack:///./src/templates/archive-template.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./src/components/postlist.js"],"names":["pagination","_ref","pageContext","currentPage","numPages","isFirst","isLast","prevPage","nextPage","react_default","a","createElement","style","display","flexWrap","justifyContent","alignItems","listStyle","padding","gatsby_browser_entry","to","rel","Array","from","length","_","i","key","margin","rhythm","textDecoration","color","background","Archive","render","posts","this","props","data","allMarkdownRemark","edges","layout","Helmet","title","site","siteMetadata","postlist","React","Component","ArchiveQuery","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1__","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1___default","lincolnTheme","overrideStyles",".navigation a","a.brand","a.brand:visited",".navigation ul","clear","float","nav.navigation","marginTop",".dateline","fontWeight","fontSize","fontStyle","marginBottom","typography","Typography","scale","Container","styled","div","withConfig","displayName","componentId","Entry","section","Brand","p","h1","children","_public_static_d_3816442631_json__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","className","tagline","href","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","PostList","filter","post","node","frontmatter","map","_ref2","id","path","date","excerpt"],"mappings":"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","file":"component---src-templates-archive-template-js-ebb7f94c2dd54c238bdd.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({ pageContext }) => {\n    const {currentPage, numPages} = pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage === 2 ? \"/archive/\" : `/archive/${currentPage - 1}/`\n    const nextPage = `/archive/${currentPage + 1}`\n    return (\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          {!isFirst && (\n            <Link to={`${prevPage}`} rel=\"prev\">\n              ← Previous Page\n            </Link>\n          )}\n          {Array.from({ length: numPages }, (_, i) => (\n            <li\n              key={`pagination-number${i + 1}`}\n              style={{\n                margin: 0,\n              }}\n            >\n              <Link\n                to={`/archive/${i === 0 ? '' : i + 1}`}\n                style={{\n                  padding: rhythm(1 / 4),\n                  textDecoration: 'none',\n                  color: i + 1 === currentPage ? '#ffffff' : '',\n                  background: i + 1 === currentPage ? '#007acc' : '',\n                }}\n              >\n                {i + 1}\n              </Link>\n            </li>\n          ))}\n          {!isLast && (\n            <Link to={`${nextPage}/`} rel=\"next\">\n              Next Page →\n            </Link>\n          )}\n        </ul>\n    )\n}","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport PostList from \"../components/postlist\"\nimport Pagination from \"../components/pagination\"\nimport { Helmet } from \"react-helmet\"\n\nexport default class Archive extends React.Component {\n    render () {\n        const posts = this.props.data.allMarkdownRemark.edges\n        return (\n            <Layout>\n                <Helmet title={\"Archive - \" + this.props.data.site.siteMetadata.title} />\n                <PostList posts={posts} />\n                <Pagination pageContext={this.props.pageContext} />\n                <div>See older posts from <Link to=\"/gdarchive\"><em>That's Debatable</em></Link></div>\n            </Layout>\n        )\n    }\n}\n\nexport const ArchiveQuery = graphql`\n    query ArchiveTemplateQuery($skip: Int!, $limit: Int!){\n        allMarkdownRemark (\n            filter: {frontmatter: {section: {eq: \"publish\"}}},\n            sort: { fields: [frontmatter___date], order: DESC },\n            limit: $limit,\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    id\n                    excerpt(pruneLength: 250)\n                    frontmatter {\n                        title\n                        date(formatString: \"YYYY-MM-DD\")\n                        path\n                    }\n\n                }\n            }\n        }\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        \n    }\n`\n","import Typography from \"typography\"\nimport lincolnTheme from \"typography-theme-lincoln\"\n\n\nlincolnTheme.overrideStyles = () => ({\n    '.navigation a': {\n        textDecoration: 'none',\n    },\n    'a.brand': {\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n    'a.brand:visited': {\n        color: 'inherit',\n    },\n    '.navigation ul': {\n        clear: 'both',\n\t    float: 'right',\n\t    listStyle: 'none inside',\n        color: '#333',\n        padding: '0',\n        margin: '0 0 1.5rem 0',\n    },\n    'nav.navigation': {\n        marginTop: '1rem',\n    },\n    '.dateline': {\n        fontWeight: 200,\n        fontSize: \"17px\",\n        fontStyle: 'italic',\n        marginBottom: 0,\n    }\n})\n\nconst typography = new Typography(\n    lincolnTheme\n);\n\nif (process.env.NODE_ENV !== 'production') {\n    typography.injectStyles()\n  }\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale","import React from \"react\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { rhythm } from \"../utils/typography\"\n\n\n\nconst Container = styled.div`\n    display: flex;\n    flex-flow: row;\n    align-items: flex-start;\n    padding: 0 ${rhythm(1)};\n    margin: 40px auto;\n`\n\nconst sideNav = styled.section`\n    width: 20%;\n`\n\nconst Entry = styled.div`\n    width: 65%;\n    margin: ${rhythm(2)} ${rhythm(1)} ${rhythm(1)} ${rhythm(2)};\n`\n\nconst tagLine = styled.p`\n    padding: 0; \n    color: #003366; \n    letter-spacing: 0.7px; \n    margin-top: ${rhythm(0.1)}; \n    margin-bottom: ${rhythm(1)};\n    font-size: ${rhythm(0.9)};\n`\n\nconst Brand = styled.h1`\n    padding: 0; \n    color: #003366; \n    letter-spacing: 0.7px; \n    margin-top: ${rhythm(0.1)};\n    margin-bottom: ${rhythm(0.2)};\n    font-size: ${rhythm(2.5)};\n`\n\nexport default ({ children }) => {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        tagline\n                }\n            }\n        }\n    `\n    )\n    return (\n        <Container>\n            <Entry>\n                {children}\n            </Entry>\n            <sideNav>\n                <Brand><Link className=\"brand\" to=\"/\">{data.site.siteMetadata.title}</Link></Brand>\n                <tagLine>{data.site.siteMetadata.tagline}</tagLine>\n                <nav className=\"navigation\">\n                    <ul>\n                        <li>\n                            <Link to=\"/about/\">About</Link>\n                        </li>\n                        <li>\n                            <a href={\"/archive\"}>Archive</a>\n                        </li>\n                        <li>\n                            <Link to=\"/portfolio/\">Portfolio</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/contact/\">Contact</Link>\n                        </li>\n                    </ul>\n                </nav>\n            </sideNav>\n        </Container>        \n    )\n}","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostList = ({ posts }) => {\n    return (\n        <div className=\"post-list\">\n                {posts\n                    .filter(post => post.node.frontmatter.title.length > 0)\n                    .map(({ node: post }) => {\n                        return (\n                            <div className=\"post-preview\" key={post.id}>\n                                <h3>\n                                    <Link to={post.frontmatter.path}>\n                                        {post.frontmatter.title}\n                                    </Link>\n                                </h3>\n                                <p className=\"dateline\">{post.frontmatter.date}</p>\n                                <p>{post.excerpt}</p>\n                            </div>\n                        )\n                    }\n                    )\n                }\n        </div>\n    )\n}\n\nexport default PostList;"],"sourceRoot":""}