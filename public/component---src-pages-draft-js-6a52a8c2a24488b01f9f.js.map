{"version":3,"sources":["webpack:///./src/pages/draft.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Archive","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","_ref","data","posts","allMarkdownRemark","edges","a","createElement","title","site","siteMetadata","className","filter","post","node","frontmatter","length","map","_ref2","key","id","to","path","date","excerpt","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1__","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1___default","lincolnTheme","overrideStyles",".navigation a","textDecoration","a.brand","color","a.brand:visited",".navigation ul","clear","float","listStyle","padding","margin","nav.navigation","marginTop",".dateline","fontWeight","fontSize","fontStyle","marginBottom","typography","Typography","scale","Container","styled","div","withConfig","displayName","componentId","Entry","section","Brand","p","h1","children","_public_static_d_3816442631_json__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","tagline","href"],"mappings":"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","file":"component---src-pages-draft-js-6a52a8c2a24488b01f9f.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { Helmet } from \"react-helmet\"\nimport { Link, graphql } from \"gatsby\"\n\nexport default function Archive({ data }) {\n    const { edges: posts } = data.allMarkdownRemark\n    return (\n        <Layout>\n            <Helmet title={\"Drafts - \" + data.site.siteMetadata.title} />\n            <h2>Drafts</h2>\n            <div className=\"post-list\">\n                {posts\n                    .filter(post => post.node.frontmatter.title.length > 0)\n                    .map(({ node: post }) => {\n                        return (\n                            <div className=\"post-preview\" key={post.id}>\n                                <h3>\n                                    <Link to={post.frontmatter.path}>\n                                        {post.frontmatter.title}\n                                    </Link>\n                                </h3>\n                                <p className=\"dateline\">{post.frontmatter.date}</p>\n                                <p>{post.excerpt}</p>\n                            </div>\n                        )\n                    }\n                    )\n                }\n            </div>\n        </Layout>\n    )\n    \n}\n\n\n\nexport const pageQuery = graphql`\n    query DraftQuery {\n        allMarkdownRemark(\n            filter: {frontmatter: {section: {eq: \"draft\"}}},\n            sort: {order: DESC, fields: [frontmatter___date]},\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        date(formatString: \"YYYY-MM-DD\")\n                        path\n                    }\n                    excerpt(pruneLength: 250)\n                }\n            }\n        }\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n`\n","import Typography from \"typography\"\nimport lincolnTheme from \"typography-theme-lincoln\"\n\n\nlincolnTheme.overrideStyles = () => ({\n    '.navigation a': {\n        textDecoration: 'none',\n    },\n    'a.brand': {\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n    'a.brand:visited': {\n        color: 'inherit',\n    },\n    '.navigation ul': {\n        clear: 'both',\n\t    float: 'right',\n\t    listStyle: 'none inside',\n        color: '#333',\n        padding: '0',\n        margin: '0 0 1.5rem 0',\n    },\n    'nav.navigation': {\n        marginTop: '1rem',\n    },\n    '.dateline': {\n        fontWeight: 200,\n        fontSize: \"17px\",\n        fontStyle: 'italic',\n        marginBottom: 0,\n    }\n})\n\nconst typography = new Typography(\n    lincolnTheme\n);\n\nif (process.env.NODE_ENV !== 'production') {\n    typography.injectStyles()\n  }\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale","import React from \"react\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { rhythm } from \"../utils/typography\"\n\n\n\nconst Container = styled.div`\n    display: flex;\n    flex-flow: row;\n    align-items: flex-start;\n    padding: 0 ${rhythm(1)};\n    margin: 40px auto;\n`\n\nconst sideNav = styled.section`\n    width: 20%;\n`\n\nconst Entry = styled.div`\n    width: 65%;\n    margin: ${rhythm(2)} ${rhythm(1)} ${rhythm(1)} ${rhythm(2)};\n`\n\nconst tagLine = styled.p`\n    padding: 0; \n    color: #003366; \n    letter-spacing: 0.7px; \n    margin-top: ${rhythm(0.1)}; \n    margin-bottom: ${rhythm(1)};\n    font-size: ${rhythm(0.9)};\n`\n\nconst Brand = styled.h1`\n    padding: 0; \n    color: #003366; \n    letter-spacing: 0.7px; \n    margin-top: ${rhythm(0.1)};\n    margin-bottom: ${rhythm(0.2)};\n    font-size: ${rhythm(2.5)};\n`\n\nexport default ({ children }) => {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        tagline\n                }\n            }\n        }\n    `\n    )\n    return (\n        <Container>\n            <Entry>\n                {children}\n            </Entry>\n            <sideNav>\n                <Brand><Link className=\"brand\" to=\"/\">{data.site.siteMetadata.title}</Link></Brand>\n                <tagLine>{data.site.siteMetadata.tagline}</tagLine>\n                <nav className=\"navigation\">\n                    <ul>\n                        <li>\n                            <Link to=\"/about/\">About</Link>\n                        </li>\n                        <li>\n                            <a href={\"/archive\"}>Archive</a>\n                        </li>\n                        <li>\n                            <Link to=\"/portfolio/\">Portfolio</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/contact/\">Contact</Link>\n                        </li>\n                    </ul>\n                </nav>\n            </sideNav>\n        </Container>        \n    )\n}"],"sourceRoot":""}